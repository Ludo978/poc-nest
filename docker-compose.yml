version: '3'
services:
  #Event-store
  eventstore:
    image: ghcr.io/eventstore/eventstore:20.6.1-alpha.0.69-arm64v8
    ports:
      - '2113:2113'
      - '1113:1113'
    environment:
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_RUN_PROJECTIONS=None
      - EVENTSTORE_START_STANDARD_PROJECTIONS=false
    networks:
      - eventstore
  gateway:
    container_name: gateway-service
    build: ./gateway
    ports:
      - '3000:3000'
    volumes:
      - './gateway:/app'
      - '/app/node_modules'
    networks:
      - account
      - order
      - product
  #Account
  postgres-account:
    image: 'postgres:latest'
    environment:
      POSTGRES_PASSWORD: padd
      POSTGRES_USER: uss
    networks:
      - account
  account:
    container_name: account-service
    build: ./account
    volumes:
      - './account:/app'
      - '/app/node_modules'
      - './shared:/app/src/shared'
    networks:
      - eventstore
      - account
    depends_on:
      - postgres-account
      - eventstore
  #Order
  postgres-order:
    image: 'postgres:latest'
    environment:
      POSTGRES_PASSWORD: padd
      POSTGRES_USER: uss
    networks:
      - order
  order:
    container_name: order-service
    build: ./order
    volumes:
      - './order:/app'
      - '/app/node_modules'
      - './shared:/app/src/shared'
    networks:
      - eventstore
      - order
    depends_on:
      - postgres-order
      - eventstore
  #Product
  postgres-product:
    image: 'postgres:latest'
    environment:
      POSTGRES_PASSWORD: padd
      POSTGRES_USER: uss
    networks:
      - product
  product:
    container_name: product-service
    build: ./product
    volumes:
      - './product:/app'
      - '/app/node_modules'
      - './shared:/app/src/shared'
    networks:
      - eventstore
      - product
    depends_on:
      - postgres-product
      - eventstore

networks:
  eventstore:
  account:
  order:
  product: